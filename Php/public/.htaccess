<IfModule mod_rewrite.c>

  # Single
  #Header set Access-Control-Allow-Origin https://edocs.redtone.com
  
  # Multiple subDomain
  #SetEnvIf Origin ^(https?://.+\.redtone\.com(?::\d{1,5})?)$   CORS_ALLOW_ORIGIN=$1
  #Header set Access-Control-Allow-Origin  %{CORS_ALLOW_ORIGIN}e   env=CORS_ALLOW_ORIGIN
  #Header set Access-Control-Allow-Credentials true
  #Header add Access-Control-Allow-Headers "Access-Control-Allow-Origin,X-Requested-With, Content-Type, Accept, Origin, Authorization,Json-Token"

  #Header merge  Vary "Origin"

  # Multiple Domain
  #SetEnvIf Origin "http(s)?://(www\.)?(redtone.org|domain2.com|domain3.net)$" AccessControlAllowOrigin=$0$1
  #Header add Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
  #Header set Access-Control-Allow-Credentials true


  RewriteEngine On

  # Some hosts may require you to use the `RewriteBase` directive.
  # Determine the RewriteBase automatically and set it as environment variable.
  # If you are using Apache aliases to do mass virtual hosting or installed the
  # project in a subdirectory, the base path will be prepended to allow proper
  # resolution of the index.php file and to redirect to the correct URI. It will
  # work in environments without path prefix as well, providing a safe, one-size
  # fits all solution. But as you do not need it in this case, you can comment
  # the following 2 lines to eliminate the overhead.
  RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
  RewriteRule ^(.*) - [E=BASE:%1]
  
  # If the above doesn't work you might need to set the `RewriteBase` directive manually, it should be the
  # absolute physical path to the directory that contains this htaccess file.
  # RewriteBase /

  RewriteCond %{REQUEST_FILENAME} !-f
  # need to change on production
  #RewriteRule ^ /personal/public/index.php [QSA,L]
  RewriteRule ^ /index.php [QSA,L]

</IfModule>
